<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wms.mybatis.dao.DocOrderPackingMybatisDao" > 
<!-- Result Map-->
<resultMap id="BaseResultMap" type="com.wms.entity.DocOrderPacking" >
	<result column="traceid" property="traceid"/>
	<result column="orderno" property="orderno"/>
	<result column="sku" property="sku"/>
	<result column="skuName" property="skuName"/>
	<result column="allocationQty" property="allocationQty"/>
	<result column="qty" property="qty"/>
	<result column="allocationdetailsid" property="allocationdetailsid"/>
	<result column="addtime" property="addtime"/>
	<result column="addwho" property="addwho"/>
	<result column="merchantName" property="merchantName"/>
	<result column="consigneename" property="consigneename"/>
	<result column="cAddress1" property="cAddress1"/>
</resultMap>
       
<!-- Doc_Order_Packing table all fields -->
<sql id="Base_Column_List" >
	 traceid,orderno,sku,qty,allocationdetailsid,addtime,addwho
</sql>
   
   
<!-- 查询条件 -->
<sql id="Example_Where_Clause">
where 1=1
<trim  suffixOverrides="," >
	<if test="condition.orderno != null" >
	    and orderno =  #{condition.orderno}
	</if>
	<if test="condition.traceid != null and condition.traceid != ''" >
	    and traceid =  #{condition.traceid}
	</if>
	<if test="condition.sku != null and condition.sku != ''" >
	    and sku =  #{condition.sku}
	</if>
	<if test="condition.allocationdetailsid != null and condition.allocationdetailsid != ''" >
	    and allocationdetailsid =  #{condition.allocationdetailsid}
	</if>
	<if test="condition.qty != null and condition.qty != ''" >
	    and qty =  #{condition.qty}
	</if>
</trim>
</sql>

<!--插入订单箱数 -->
<insert id="packingBoxnoAdd" parameterType="Object" >
	insert into Doc_Order_Packing_Boxno (orderno, boxno) values (#{orderno,jdbcType=VARCHAR}, 1)
</insert>

<!--更新订单箱数-->  
<update id="packingBoxnoUpdate" parameterType="Object" >
	update Doc_Order_Packing_Boxno set boxno = boxno + 1 where orderno = #{orderno,jdbcType=VARCHAR}
</update>

<!--插入订单装箱日志-->
<insert id="packingTimeAdd" parameterType="Object" >
	insert into Doc_Order_Packing_Time (traceid,starttime,addwho) values (#{traceid,jdbcType=VARCHAR}, sysdate, #{addwho,jdbcType=VARCHAR})
</insert>

<!--更新订单装箱日志-->
<update id="packingTimeUpdate" parameterType="Object" >
	update Doc_Order_Packing_Time set endtime = sysdate where traceid = #{traceid,jdbcType=VARCHAR}
</update>

<!--插入产品扫描日志-->
<insert id="packingSkuAdd" parameterType="Object" >
	insert into Doc_Order_Packing_Time_Sku (traceid, sku, addwho, addtime)
	values (#{traceid,jdbcType=VARCHAR}, #{sku,jdbcType=VARCHAR}, #{addwho,jdbcType=VARCHAR}, sysdate)
</insert>

<!--插入产品装箱日志-->
<insert id="packingAdd" parameterType="Object" >
	insert into Doc_Order_Packing_2bnet (
	traceid,
	sku,
	orderno,
	qty,
	allocationdetailsid,
	addtime,
	addwho)
	values (
	#{traceid,jdbcType=VARCHAR},
	#{sku,jdbcType=VARCHAR},
	#{orderno,jdbcType=VARCHAR},
	#{qty,jdbcType=NUMERIC},
	#{allocationdetailsid,jdbcType=VARCHAR},
	sysdate,
	#{addwho,jdbcType=VARCHAR})
</insert>

<!--更新产品装箱日志-->
<update id="packingUpdate" parameterType="Object" >
	update Doc_Order_Packing_2bnet
	set qty = qty + #{qty,jdbcType=NUMERIC}
	where traceid = #{traceid,jdbcType=VARCHAR}
	and sku = #{sku,jdbcType=VARCHAR}
	and allocationdetailsid = #{allocationdetailsid,jdbcType=VARCHAR}
</update>

<!--删除单件装箱记录-->
<update id="packingSingleDelete" parameterType="Object" >
	update Doc_Order_Packing_2bnet
	set qty = qty - 1
	where traceid = #{traceid,jdbcType=VARCHAR}
	and sku = #{sku,jdbcType=VARCHAR}
	and allocationdetailsid = #{allocationdetailsid,jdbcType=VARCHAR}
</update>

<!-- 删除整行装箱记录 -->
<delete id="packingSkuDelete" parameterType="Object">
	delete from Doc_Order_Packing_2bnet
	where traceid = #{traceid,jdbcType=VARCHAR}
	and sku = #{sku,jdbcType=VARCHAR}
	and allocationdetailsid = #{allocationdetailsid,jdbcType=VARCHAR}
</delete>

<!--更新订单装箱标记-->
<update id="packingFlagUpdate" parameterType="Object" >
	update Act_Allocation_Details set packflag = 'N' where allocationdetailsid = #{allocationdetailsid,jdbcType=VARCHAR}
</update>

<!-- 清空装箱记录 -->
<!-- 开始 -->
<delete id="packingBoxnoDelete" parameterType="Object">
	delete from Doc_Order_Packing_Boxno
	where orderno = #{orderno,jdbcType=VARCHAR}
</delete>

<delete id="packingTimeDelete" parameterType="Object">
	delete from Doc_Order_Packing_Time
	where traceid like #{orderno,jdbcType=VARCHAR} || '%'
</delete>

<delete id="packingTimeSkuDelete" parameterType="Object">
	delete from Doc_Order_Packing_Time_Sku
	where traceid like #{orderno,jdbcType=VARCHAR} || '%'
</delete>

<delete id="packingDelete" parameterType="Object">
	delete from Doc_Order_Packing_2bnet
	where orderno = #{orderno,jdbcType=VARCHAR}
</delete>
<!-- 结束 -->

<!-- 包装复核 列表总数-->
<select id="queryByCount" resultType="java.lang.Integer"  parameterType="Object">
	select count(1) from Doc_Order_Packing_2bnet 
	<include refid="Example_Where_Clause"/>
</select>
  	
<!-- 查询包装复核列表 -->
<select id="queryByPageList" resultMap="BaseResultMap"  parameterType="Object">
	select traceid,
	       orderno,
	       sku,
	       skuName,
	       qty,
	       allocationdetailsid,
	       addwho,
	       row_num
	  from (select b.customerid,
	               a.traceid,
	               a.orderno,
	               a.sku,
	               c.descr_c as skuName,
	               a.qty,
	               a.allocationdetailsid,
	               a.addtime,
	               a.addwho,
	               row_number() over(order by a.traceid, a.sku) as row_num
	          from Doc_Order_Packing_2bnet a, Doc_Order_Header b, Bas_Sku c
	         where a.orderno = b.orderno
	           and b.customerid = c.customerid
	           and a.sku = c.sku
			   <if test="condition.orderno != null" >
				   and a.orderno =  #{condition.orderno}
			   </if>
			   <if test="condition.traceid != null and condition.traceid != ''" >
				   and a.traceid =  #{condition.traceid}
			   </if>
			   )
	 where 1 = 1
    <if test="limitClause != null and limitClause != ''" >
       ${limitClause}
    </if>
</select>

<!--查询订单对应箱数-->
<select id="queryBoxnoById" resultMap="BaseResultMap" parameterType="Object">
	select orderno, boxno + 1 as qty
	  from Doc_Order_Packing_Boxno
	 where orderno = #{orderno,jdbcType=VARCHAR}
</select>

<!--扫描产品判断-->
<select id="checkSkuById" resultMap="BaseResultMap" parameterType="Object">
	select a.sku, b.descr_c as skuName
	  from (select distinct customerid, sku
	          from Act_Allocation_Details
	         where orderno = #{orderno,jdbcType=VARCHAR}) a,
	       Bas_Sku b
	 where a.customerid = b.customerid
	   and a.sku = b.sku
	   and (b.sku = #{sku,jdbcType=VARCHAR}
	   	 or b.alternate_sku1 = #{sku,jdbcType=VARCHAR}
		 or b.alternate_sku2 = #{sku,jdbcType=VARCHAR}
		 or b.alternate_sku3 = #{sku,jdbcType=VARCHAR})
</select>

<!--扫描产品判断-->
<select id="checkCountById" resultType="java.lang.Long"  parameterType="Object">
	select count(*)
	  from Doc_Order_Packing_2bnet
	 where traceid = #{traceid,jdbcType=VARCHAR}
	   and sku = #{sku,jdbcType=VARCHAR}
	   and allocationdetailsid = #{allocationdetailsid,jdbcType=VARCHAR}
</select>

<!--扫描数量判断-->
<select id="checkQtyById" resultMap="BaseResultMap" parameterType="Object">
	<![CDATA[
	select *
	  from (select a.orderno,
	               a.sku,
	               b.descr_c as skuName,
	               a.qty,
	               a.allocationdetailsid
	          from Act_Allocation_Details a,
	               Bas_Sku b,
	               (select orderno, allocationdetailsid, sku, sum(qty) qty
	                  from Doc_Order_Packing_2bnet
	                 where orderno = #{orderno,jdbcType=VARCHAR}
	                 group by orderno, allocationdetailsid, sku) c
	         where a.customerid = b.customerid
	           and a.sku = b.sku
	           and a.orderno = c.orderno(+)
	           and a.allocationdetailsid = c.allocationdetailsid(+)
	           and a.sku = c.sku(+)
	           and a.orderno = #{orderno}
	           and a.sku = #{sku,jdbcType=VARCHAR}
	           and a.qty >= nvl(c.qty, 0) + #{qty,jdbcType=NUMERIC}
	         order by a.allocationdetailsid)
	 where rownum <= 1
	 ]]>
</select>
 
<!--查询包装复核数据-->
<select id="queryById"  resultMap="BaseResultMap" parameterType="Object">
	select a.sku, b.descr_c as skuName, a.allocationQty, c.qty
	  from (select customerid, orderno, sku, sum(qty) as allocationQty
	          from Act_Allocation_Details
	         where orderno = #{orderno,jdbcType=VARCHAR}
	           and sku = #{sku,jdbcType=VARCHAR}
	         group by customerid, orderno, sku) a,
	       Bas_Sku b,
	       (select orderno, sku, sum(qty) qty
	          from Doc_Order_Packing_2bnet
	         where orderno = #{orderno,jdbcType=VARCHAR}
	           and sku = #{sku,jdbcType=VARCHAR}
	         group by orderno, sku) c
	 where a.customerid = b.customerid
	   and a.sku = b.sku
	   and a.orderno = c.orderno(+)
	   and a.sku = c.sku(+)
</select>
 
<!--查询包装复核数据-->
<select id="queryPackingById"  resultMap="BaseResultMap" parameterType="Object">
	select traceid,sku,allocationdetailsid,qty
	  from Doc_Order_Packing_2bnet
	 where traceid = #{traceid,jdbcType=VARCHAR}
	   and sku = #{sku,jdbcType=VARCHAR}
	   and allocationdetailsid = #{allocationdetailsid,jdbcType=VARCHAR}
</select>
 
<!--查询包装复核数据-->
<select id="queryPackingLabelById"  resultMap="BaseResultMap" parameterType="Object">
	select c.traceid,
		   c.orderno,
		   d.consigneename || '  ' || d.c_tel1 || '  ' || to_char(sysdate,'yyyy/mm/dd') as consigneename,
		   d.c_address1 as cAddress1, 
		   e.descr_c as merchantName
	  from (select distinct b.orderno, b.traceid
	          from Doc_Order_Packing_Time a, Doc_Order_Packing_2bnet b
	         where a.traceid = b.traceid
	           and b.orderno = #{orderno,jdbcType=VARCHAR}
	           <if test="traceid != null and traceid != ''" >
				   and b.traceid =  #{traceid,jdbcType=VARCHAR}
			   </if>
	           ) c,
	       Doc_Order_Header d,
	       Bas_Customer e
	 where c.orderno = d.orderno
	   and d.customerid = e.customerid
	 order by c.traceid
</select>

<!--按订单发货 -->
<select id="commitOrderPacking" statementType="CALLABLE" parameterType="java.util.Map">
	   {call SPSO_ORDER_PACKING(#{warehouseid,mode=IN,jdbcType=VARCHAR},#{orderno,mode=IN,jdbcType=VARCHAR},#{userid,mode=IN,jdbcType=VARCHAR},#{result,mode=OUT,jdbcType=VARCHAR})}
</select>
</mapper>   
