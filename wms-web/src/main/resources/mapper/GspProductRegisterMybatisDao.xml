<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wms.mybatis.dao.GspProductRegisterMybatisDao" >
	<!-- Result Map-->
	<resultMap id="BaseResultMap" type="com.wms.entity.GspProductRegister" >
		<result column="product_register_id" property="productRegisterId"/>
		<result column="product_register_no" property="productRegisterNo"/>
		<result column="product_name_main" property="productNameMain"/>
		<result column="product_register_name" property="productRegisterName"/>
		<result column="product_register_address" property="productRegisterAddress"/>
		<result column="product_production_address" property="productProductionAddress"/>
		<result column="agent_name" property="agentName"/>
		<result column="apply_scope" property="applyScope"/>
		<result column="main_part" property="mainPart"/>
		<result column="expect_use" property="expectUse"/>
		<result column="storage_conditions" property="storageConditions"/>
		<result column="product_expiry_date" property="productExpiryDate"/>
		<result column="other_content" property="otherContent"/>
		<result column="remark" property="remark"/>
		<result column="approve_date" property="approveDate"/>
		<result column="product_register_expiry_date" property="productRegisterExpiryDate"/>
		<result column="product_register_version" property="productRegisterVersion"/>
		<result column="version" property="version"/>
		<result column="checker_id" property="checkerId"/>
		<result column="check_date" property="checkDate"/>
		<result column="create_id" property="createId"/>
		<result column="create_date" property="createDate"/>
		<result column="edit_id" property="editId"/>
		<result column="edit_date" property="editDate"/>
		<result column="is_use" property="isUse"/>
		<result column="attachment_url" property="attachmentUrl"/>
		<result column="classify_id" property="classifyId"/>
		<result column="classify_catalog" property="classifyCatalog"/>
		<result column="enterprise_id" property="enterpriseId"/>
		<result column="enterprise_name" property="enterpriseName"/>
		<result column="production_address" property="productionAddress"/>
		<result column="transport_condition_main" property="transportConditionMain"/>
		<result column="approval_department" property="approvalDepartment"/>
		<result column="product_regsiter_url" property="productRegsiterUrl"/>
		<result column="structure_and_composition" property="structureAndComposition"/>
		<result column="agent_address" property="agentAddress"/>
		<!--//生产许可证号 备案号-->
		<result column="license_no" property="licenseNo"/>
		<result column="record_no" property="recordNo"/>
		<result column="versionName" property="productRegisterVersionName"/>
		<result column="license_or_record_no" property="licenseOrRecordNol"/>
	</resultMap>

    <resultMap id="ExtendResultMap" type="com.wms.mybatis.entity.pda.PdaGspProductRegister" extends="BaseResultMap" >
        <association property="enterpriseInfo" column="enterprise_id" javaType="com.wms.entity.GspEnterpriseInfo" select="com.wms.mybatis.dao.GspEnterpriseInfoMybatisDao.queryById"/>
    </resultMap>

	<!-- gsp_product_register table all fields -->
	<sql id="Base_Column_List" >
	 product_register_id,license_or_record_no,product_register_no,product_name_main,product_register_name,product_register_address,
	 product_production_address,agent_name,apply_scope,main_part,expect_use,storage_conditions,product_expiry_date,
	 other_content,remark,approve_date,product_register_expiry_date,product_register_version,version,checker_id,
	 check_date,create_id,create_date,edit_id,edit_date,is_use,attachment_url,classify_id,classify_catalog,enterprise_id,
	 production_address,transport_condition_main,approval_department,product_regsiter_url,structure_and_composition,agent_address
</sql>

	<!-- 查询条件 -->
	<sql id="Example_Where_Clause">
		where 1=1
		<trim  suffixOverrides="," >
			<if test="condition.productRegisterId != null and condition.productRegisterId != ''" >
				and r.product_register_id like CONCAT('%',#{condition.productRegisterId},'%')
			</if>
			<if test="condition.productRegisterNo != null and condition.productRegisterNo != ''" >
				and r.product_register_no like CONCAT('%',#{condition.productRegisterNo},'%')
			</if>
			<if test="condition.productNameMain != null and condition.productNameMain != ''" >
				and r.product_name_main like CONCAT('%',#{condition.productNameMain},'%')
			</if>
			<if test="condition.productRegisterName != null and condition.productRegisterName != ''" >
				and r.product_register_name =  #{condition.productRegisterName}
			</if>
			<if test="condition.productRegisterAddress != null and condition.productRegisterAddress != ''" >
				and r.product_register_address =  #{condition.productRegisterAddress}
			</if>
			<if test="condition.productProductionAddress != null and condition.productProductionAddress != ''" >
				and r.product_production_address =  #{condition.productProductionAddress}
			</if>
			<if test="condition.agentName != null and condition.agentName != ''" >
				and r.agent_name =  #{condition.agentName}
			</if>
			<if test="condition.applyScope != null and condition.applyScope != ''" >
				and r.apply_scope =  #{condition.applyScope}
			</if>
			<if test="condition.mainPart != null and condition.mainPart != ''" >
				and r.main_part =  #{condition.mainPart}
			</if>
			<if test="condition.expectUse != null and condition.expectUse != ''" >
				and r.expect_use =  #{condition.expectUse}
			</if>
			<if test="condition.storageConditions != null and condition.storageConditions != ''" >
				and r.storage_conditions =  #{condition.storageConditions}
			</if>
			<if test="condition.productExpiryDate != null and condition.productExpiryDate != ''" >
				and r.product_expiry_date =  #{condition.productExpiryDate}
			</if>
			<if test="condition.otherContent != null and condition.otherContent != ''" >
				and r.other_content =  #{condition.otherContent}
			</if>
			<if test="condition.remark != null and condition.remark != ''" >
				and r.remark =  #{condition.remark}
			</if>
			<if test="condition.approveDate != null and condition.approveDate != ''" >
				and r.approve_date =  #{condition.approveDate}
			</if>
			<if test="condition.productRegisterExpiryDate != null and condition.productRegisterExpiryDate != ''" >
				and r.product_register_expiry_date =  #{condition.productRegisterExpiryDate}
			</if>
			<if test="condition.productRegisterVersion != null and condition.productRegisterVersion != ''" >
				and r.product_register_version like CONCAT('%',#{condition.productRegisterVersion},'%')
			</if>
			<if test="condition.version != null and condition.version != ''" >
				and r.version =  #{condition.version}
			</if>
			<choose>
				<when test="condition.checkerId != null and condition.checkerId == 'all'">
					and r.checker_id is not null
				</when>
				<when test="condition.checkerId != null and condition.checkerId != '' and condition.checkerId != 'all'">
					and r.checker_id =  #{condition.checkerId}
				</when>
			</choose>
			<if test="condition.checkDate != null and condition.checkDate != ''" >
				and r.check_date =  #{condition.checkDate}
			</if>
			<if test="condition.createId != null and condition.createId != ''" >
				and r.create_id =  #{condition.createId}
			</if>
			<if test="condition.createDate != null and condition.createDate != ''" >
				and r.create_date =  #{condition.createDate}
			</if>
			<if test="condition.editId != null and condition.editId != ''" >
				and r.edit_id =  #{condition.editId}
			</if>
			<if test="condition.editDate != null and condition.editDate != ''" >
				and r.edit_date =  #{condition.editDate}
			</if>
			<if test="condition.isUse != null and condition.isUse != ''" >
				and r.is_use =  #{condition.isUse}
			</if>
			<if test="condition.attachmentUrl != null and condition.attachmentUrl != ''" >
				and r.attachment_url =  #{condition.attachmentUrl}
			</if>
			<if test="condition.classifyId != null and condition.classifyId != ''" >
				and r.classify_id =  #{condition.classifyId}
			</if>
			<if test="condition.classifyCatalog != null and condition.classifyCatalog != ''" >
				and r.classify_catalog like concat('%',#{condition.classifyCatalog},'%')
			</if>
			<if test="condition.enterpriseId != null and condition.enterpriseId != ''" >
				and r.enterprise_id =  #{condition.enterpriseId}
			</if>
			<if test="condition.productionAddress != null and condition.productionAddress != ''" >
				and r.production_address =  #{condition.productionAddress}
			</if>
			<if test="condition.transportConditionMain != null and condition.transportConditionMain != ''" >
				and r.transport_condition_main =  #{condition.transportConditionMain}
			</if>
			<if test="condition.approvalDepartment != null and condition.approvalDepartment != ''" >
				and r.approval_department =  #{condition.approvalDepartment}
			</if>
			<if test="condition.productRegsiterUrl != null and condition.productRegsiterUrl != ''" >
				and r.product_regsiter_url =  #{condition.productRegsiterUrl}
			</if>
			<if test="condition.structureAndComposition != null and condition.structureAndComposition != ''" >
				and r.structure_and_composition =  #{condition.structureAndComposition}
			</if>
			<if test="condition.agentAddress != null and condition.agentAddress != ''" >
				and r.agent_address =  #{condition.agentAddress}
			</if>
			<if test="condition.createDateBegin != null and condition.createDateBegin !='' ">
				and r.create_Date &gt;= #{condition.createDateBegin}
			</if>
			<if test="condition.createDateEnd != null and condition.createDateEnd != ''" >
				and r.create_Date &lt;= #{condition.createDateEnd}
			</if>


			<if test="condition.idList != null and condition.idList != ''">
				and r.product_register_id in
				<foreach collection="idList" index="index" item="id" open="(" separator="," close=")">
					#{id}
				</foreach>
			</if>
		</trim>
	</sql>


	<!-- 插入记录 -->
	<insert id="add" parameterType="Object" >
  insert into gsp_product_register(product_register_id,product_register_no,product_name_main,product_register_name,product_register_address,product_production_address,agent_name,apply_scope,main_part,expect_use,storage_conditions,product_expiry_date,other_content,remark,approve_date,product_register_expiry_date,product_register_version,version,checker_id,check_date,create_id,create_date,edit_id,edit_date,is_use,attachment_url,classify_id,classify_catalog,enterprise_id,production_address,transport_condition_main,approval_department,product_regsiter_url,structure_and_composition,agent_address,license_or_record_no)
 values(#{productRegisterId},trim(#{productRegisterNo}),#{productNameMain},#{productRegisterName},#{productRegisterAddress},#{productProductionAddress},#{agentName},#{applyScope},#{mainPart},#{expectUse},#{storageConditions},#{productExpiryDate},#{otherContent},#{remark},#{approveDate},#{productRegisterExpiryDate},#{productRegisterVersion},#{version},#{checkerId},#{checkDate},#{createId},now(),#{editId},#{editDate},#{isUse},#{attachmentUrl},#{classifyId},#{classifyCatalog},#{enterpriseId},#{productionAddress},#{transportConditionMain},#{approvalDepartment},#{productRegsiterUrl},#{structureAndComposition},#{agentAddress},#{licenseOrRecordNol})
</insert>

	<!-- 根据id，修改记录-->
	<update id="update" parameterType="Object" >
  update gsp_product_register set product_register_no=#{productRegisterNo},product_name_main=#{productNameMain},product_register_name=#{productRegisterName},product_register_address=#{productRegisterAddress},product_production_address=#{productProductionAddress},agent_name=#{agentName},apply_scope=#{applyScope},main_part=#{mainPart},expect_use=#{expectUse},storage_conditions=#{storageConditions},product_expiry_date=#{productExpiryDate},other_content=#{otherContent},remark=#{remark},approve_date=#{approveDate},product_register_expiry_date=#{productRegisterExpiryDate},product_register_version=#{productRegisterVersion},
  version=#{version},checker_id=#{checkerId},check_date=#{checkDate},create_id=#{createId},create_date=#{createDate},edit_id=#{editId},edit_date=#{editDate},is_use=#{isUse},attachment_url=#{attachmentUrl},classify_id=#{classifyId},classify_catalog=#{classifyCatalog},enterprise_id=#{enterpriseId},production_address=#{productionAddress} where product_register_id=#{productRegisterId}
 </update>

	<!-- 修改记录，只修改只不为空的字段 -->
	<update id="updateBySelective" parameterType="Object" >
		update gsp_product_register set
		<trim  suffixOverrides="," >
			<if test="productRegisterNo != null  ">
				product_register_no=#{productRegisterNo},
			</if>
			<if test="productNameMain != null  ">
				product_name_main=#{productNameMain},
			</if>
			<if test="productRegisterName != null  ">
				product_register_name=#{productRegisterName},
			</if>
			<if test="productRegisterAddress != null  ">
				product_register_address=#{productRegisterAddress},
			</if>
			<if test="productProductionAddress != null  ">
				product_production_address=#{productProductionAddress},
			</if>
			<if test="agentName != null  ">
				agent_name=#{agentName},
			</if>
			<if test="applyScope != null  ">
				apply_scope=#{applyScope},
			</if>
			<if test="mainPart != null  ">
				main_part=#{mainPart},
			</if>
			<if test="expectUse != null  ">
				expect_use=#{expectUse},
			</if>
			<if test="storageConditions != null  ">
				storage_conditions=#{storageConditions},
			</if>
			<if test="productExpiryDate != null  ">
				product_expiry_date=#{productExpiryDate},
			</if>
			<if test="otherContent != null  ">
				other_content=#{otherContent},
			</if>
			<if test="remark != null  ">
				remark=#{remark},
			</if>
			<if test="approveDate != null  ">
				approve_date=#{approveDate},
			</if>
			<if test="productRegisterExpiryDate != null  ">
				product_register_expiry_date=#{productRegisterExpiryDate},
			</if>
			<if test="productRegisterVersion != null  ">
				product_register_version=#{productRegisterVersion},
			</if>
			<if test="version != null  ">
				version=#{version},
			</if>
			<if test="checkerId != null  ">
				checker_id=#{checkerId},
			</if>
			<if test="checkDate != null  ">
				check_date=#{checkDate},
			</if>
			<if test="createId != null  ">
				create_id=#{createId},
			</if>
			<if test="createDate != null  ">
				create_date=#{createDate},
			</if>
			<if test="editId != null  ">
				edit_id=#{editId},
			</if>
			<if test="editDate != null  ">
				edit_date=#{editDate},
			</if>
			<if test="isUse != null  ">
				is_use=#{isUse},
			</if>
			<if test="attachmentUrl != null  ">
				attachment_url=#{attachmentUrl},
			</if>
			<if test="classifyId != null  ">
				classify_id=#{classifyId},
			</if>
			<if test="classifyCatalog != null  ">
				classify_catalog=#{classifyCatalog},
			</if>
			<if test="enterpriseId != null  ">
				enterprise_id=#{enterpriseId},
			</if>
			<if test="productionAddress != null  ">
				production_address=#{productionAddress},
			</if>
			<if test="transportConditionMain != null  ">
				transport_condition_main=#{transportConditionMain},
			</if>
			<if test="approvalDepartment != null  ">
				approval_department=#{approvalDepartment},
			</if>
			<if test="productRegsiterUrl != null  ">
				product_regsiter_url=#{productRegsiterUrl},
			</if>
			<if test="structureAndComposition!=null">
				structure_and_composition=#{structureAndComposition},
			</if>
			<if test="agentAddress != null" >
				agent_address =  #{agentAddress},
			</if>
			<if test="licenseOrRecordNol != null" >
				license_or_record_no =  #{licenseOrRecordNol}
			</if>

		</trim>
		where product_register_id=#{productRegisterId}
	</update>

	<!-- 删除记录 -->
	<delete id="delete" parameterType="Object">
		delete 	 from gsp_product_register where product_register_id = #{productRegisterId}
	</delete>

	<!-- 根据id查询 产品注册证 -->
	<select id="queryById"  resultMap="BaseResultMap" parameterType="Object">
		select <include refid="Base_Column_List" />,r.license_or_record_no
		from gsp_product_register r where r.product_register_id = #{productRegisterId}
	</select>

	<!-- 根据id查询 产品注册证需要比较的字段 -->
	<select id="selectProductRegisterByCompare"  resultMap="BaseResultMap" parameterType="Object">
		select product_register_no,approval_department,product_name_main,approve_date,t2.codename_c classify_id,
		product_register_expiry_date,t3.codename_c product_register_version,attachment_url,classify_catalog,structure_and_composition,
		production_address,apply_scope,storage_conditions,expect_use,transport_condition_main,main_part,
		t4.enterprise_name enterprise_id,product_regsiter_url,license_or_record_no,other_content,product_register_address,t1.remark,
		product_production_address,agent_name,agent_address
		from gsp_product_register t1
		LEFT JOIN (select * from bas_codes where codeid = 'CATALOG_CLASSIFY') t2 on t1.classify_id = t2.code
		LEFT JOIN (select * from bas_codes where codeid = 'CATALOG_VERSION') t3 on t1.product_register_version = t3.code
		LEFT JOIN gsp_enterprise_info t4 ON t1.enterprise_id = t4.enterprise_id
		where product_register_id = #{productRegisterId}  ORDER BY t1.create_date desc LIMIT 1

	</select>

	<!-- 通过sku查询所有关联的注册证 -->
	<select id="queryBysku"  resultMap="BaseResultMap" parameterType="Object">
		select t1.* from gsp_product_register t1
		LEFT JOIN product_register_relation t2 on t2.product_register_id = t1.product_register_id
		where t2.product_code = #{sku}
		<if test="orderBy != null and orderBy != ''">
			ORDER BY #{orderBy}
		</if>
	</select>



	<!-- 通过产品注册证查询总数-->
	<select id="countByproductResisterNo" resultType="java.lang.Integer"  parameterType="Object">
		select count(1) from gsp_product_register where product_register_no = #{productRegisterNo}
	</select>
	<!-- 产品注册证 列表总数-->
	<select id="queryByCount" resultType="java.lang.Integer"  parameterType="Object">
		select count(1) from gsp_product_register r left join bas_codes vc on r.version = vc.code
		left join bas_codes vcs on r.classify_id = vcs.code
		left join bas_codes vcc on r.classify_catalog = vcc.code
		LEFT JOIN `gsp_enterprise_info` g ON r.enterprise_id=g.enterprise_id

		LEFT JOIN (select * from gsp_operate_license where is_use = '1' and operate_type = 'OPERATE') gl on g.enterprise_id=gl.enterprise_id
		LEFT JOIN (select * from gsp_operate_license where is_use = '1' and operate_type = 'PROD') pl on g.enterprise_id=pl.enterprise_id

		left join gsp_second_record  gr on g.enterprise_id=gr.enterprise_id
		<include refid="Example_Where_Clause"/>
	</select>

	<!-- 查询产品注册证列表 -->
	<select id="queryByList" resultMap="ExtendResultMap"  parameterType="Object">
		SELECT
		product_register_id,product_register_no,product_name_main,product_register_name,product_register_address,r.version,
		product_production_address,agent_name,apply_scope,main_part,expect_use,storage_conditions,product_expiry_date,
		other_content,r.remark,r.approve_date,product_register_expiry_date,product_register_version,vc.codename_c versionName,checker_id,
		check_date,r.create_id,r.create_date,r.edit_id,r.edit_date,r.is_use,attachment_url,vcs.codename_c classify_id,classify_catalog,
		r.enterprise_id,g.enterprise_name,production_address,transport_condition_main,approval_department,product_regsiter_url,structure_and_composition,
		agent_address,ifnull(gl.license_no,pl.license_no) license_no,gr.record_no, r.license_or_record_no
		FROM gsp_product_register r LEFT JOIN bas_codes vc ON r.product_register_version = vc.code
		LEFT JOIN bas_codes vcs ON r.classify_id = vcs.code
		LEFT JOIN `gsp_enterprise_info` g ON r.enterprise_id=g.enterprise_id
		LEFT JOIN (select * from gsp_operate_license where is_use = '1' and operate_type = 'OPERATE') gl on g.enterprise_id=gl.enterprise_id
		LEFT JOIN (select * from gsp_operate_license where is_use = '1' and operate_type = 'PROD') pl on g.enterprise_id=pl.enterprise_id
		left join gsp_second_record  gr on g.enterprise_id=gr.enterprise_id
		<include refid="Example_Where_Clause"/>
		<if test="orderByClause != null and orderByClause != ''" >
			order by  ${orderByClause}
		</if>
		<if test="limitClause != null and limitClause != ''" >
			${limitClause}
		</if>
	</select>

    <select id="queryByNo" parameterType="java.util.Map" resultMap="ExtendResultMap">
        select
        <include refid="Base_Column_List"/>
        from gsp_product_register where product_register_no = #{registerNo, jdbcType=VARCHAR} and is_use = 1
    </select>

<!--根据productNameMain查单条-->
	<select id="queryByproductNameMain" parameterType="java.util.Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from gsp_product_register where product_name_main = #{productNameMain, jdbcType=VARCHAR}
    </select>

	<select id="queryAllByNo" parameterType="java.util.Map" resultMap="ExtendResultMap">
		select
		<include refid="Base_Column_List"/>
		from gsp_product_register where product_register_no = #{registerNo, jdbcType=VARCHAR} order by create_date asc
	</select>

	<select id="queryByNoAndOrderBy" parameterType="java.util.Map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"/>
		from gsp_product_register where product_register_no = #{registerNo}
		<if test="orderby != null and orderby != ''">
			order by #{orderby}
		</if>
	</select>

<!--查询所有历史产品档案中使用过的注册证号-->
    <!--<select id="queryHistoryRegister" parameterType="java.util.Map" resultMap="ExtendResultMap">-->
        <!--select reg.* from gsp_product_register reg-->
        <!--left join bas_sku_history sku on sku.reservedfield03 = reg.product_register_no-->
        <!--where sku.sku = #{sku, jdbcType=VARCHAR} and sku.customerid = #{customerid, jdbcType=VARCHAR}-->
    <!--</select>-->

</mapper>   
