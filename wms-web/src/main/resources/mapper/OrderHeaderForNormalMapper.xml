<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wms.mybatis.dao.OrderHeaderForNormalMybatisDao" >
<!-- Result Map-->
<resultMap id="OrderHeaderForNormalMap" type="com.wms.entity.order.OrderHeaderForNormal" >
	<result column="customerId" property="customerId"/>
	<result column="customerShortName" property="customerShortName"/>
	<result column="orderNo" property="orderNo"/>
	<result column="orderTime" property="orderTime"/>
	<result column="requiredDeliveryTime" property="requiredDeliveryTime"/>
	<result column="orderCode" property="orderCode"/>
	<result column="orderStatus" property="orderStatus"/>
	<result column="orderStatusName" property="orderStatusName"/>
	<result column="orderType" property="orderType"/>
	<result column="orderTypeName" property="orderTypeName"/>
	<result column="consigneeName" property="consigneeName"/>
	<result column="province" property="province"/>
	<result column="city" property="city"/>
	<result column="district" property="district"/>
	<result column="address" property="address"/>
	<result column="tel" property="tel"/>
	<result column="zipCode" property="zipCode"/>
	<result column="lastShipmentTime" property="lastShipmentTime"/>
	<result column="notes" property="notes"/>
	<result column="addwho" property="addwho"/>
	<result column="addtime" property="addtime"/>
	<result column="edittime" property="edittime"/>
	<result column="editwho" property="editwho"/>
	<result column="boxQty" property="boxQty"/>
	<result column="totalGrossWeight" property="totalGrossWeight"/>
	<result column="totalCubic" property="totalCubic"/>
	<result column="allocationDetailsId" property="allocationDetailsId"/>
	<result column="packingFlag" property="packingFlag"/>
	<result column="printTemplate" property="printTemplate"/>
</resultMap>

<resultMap id="PickingMap" type="com.wms.entity.order.OrderHeaderForNormal" >
	<result column="customerId" property="customerId"/>
	<result column="customerShortName" property="customerShortName"/>
	<result column="orderNo" property="orderNo"/>
	<result column="orderCode" property="orderCode"/>
	<result column="totalQty" property="totalQty"/>
	<result column="totalGrossWeight" property="totalGrossWeight"/>
	<result column="totalCubic" property="totalCubic"/>
	<result column="notes" property="notes"/>
	<collection property="orderDetailsForNormalList" javaType="java.util.List" ofType="com.wms.entity.order.OrderDetailsForNormal">
		<result column="orderLineNo" property="orderLineNo"/>
		<result column="sku" property="sku"/>
		<result column="skuName" property="skuName"/>
		<result column="locationId" property="locationId"/>
		<result column="unit" property="unit"/>
		<result column="lotatt01" property="lotatt01"/>
		<result column="lotatt02" property="lotatt02"/>
		<result column="lotatt03" property="lotatt03"/>
		<result column="lotatt04" property="lotatt04"/>
		<result column="qtyAllocated" property="qtyAllocated"/>
	</collection>
</resultMap>

<resultMap id="ReceiptMap" type="com.wms.entity.order.OrderHeaderForNormal" >
	<result column="customerId" property="customerId"/>
	<result column="customerShortName" property="customerShortName"/>
	<result column="orderNo" property="orderNo"/>
	<result column="orderCode" property="orderCode"/>
	<result column="requiredDeliveryTime" property="requiredDeliveryTime"/>
	<result column="consigneeName" property="consigneeName"/>
	<result column="address" property="address"/>
	<result column="tel" property="tel"/>
	<result column="boxQty" property="boxQty"/>
	<result column="totalPrice" property="totalPrice"/>
	<result column="notes" property="notes"/>
	<collection property="orderDetailsForNormalList" javaType="java.util.List" ofType="com.wms.entity.order.OrderDetailsForNormal">
		<result column="orderLineNo" property="orderLineNo"/>
		<result column="sku" property="sku"/>
		<result column="skuName" property="skuName"/>
		<result column="unit" property="unit"/>
		<result column="qtyOrdered" property="qtyOrdered"/>
		<result column="price" property="totalPrice"/>
	</collection>
</resultMap>

<!--<resultMap id="ExportOrderDataMap" type="com.wms.entity.ExportOrderData">-->
	<!--<result column="customerId" property="customerId"/>-->
	<!--<result column="customerShortName" property="customerShortName"/>-->
	<!--<result column="orderNo" property="orderNo"/>-->
	<!--<result column="orderCode" property="orderCode"/>-->
	<!--<result column="orderStatus" property="orderStatus"/>-->
	<!--<result column="orderStatusName" property="orderStatusName"/>-->
	<!--<result column="consigneeName" property="consigneeName"/>-->
	<!--<result column="address" property="address"/>-->
	<!--<result column="tel" property="tel"/>-->
	<!--<result column="orderLineNo" property="orderLineNo"/>-->
	<!--<result column="sku" property="sku"/>-->
	<!--<result column="qtyOrdered" property="qtyOrdered"/>-->
	<!--<result column="qtyShipped" property="qtyShipped"/>-->
	<!--<result column="price" property="price"/>-->
<!--</resultMap>-->

<!-- 查询条件 -->
<sql id="Example_Where_Clause">
<trim  suffixOverrides="," >
	<if test="condition.customerId != null and condition.customerId != ''" >
	    and doh.customerid =  #{condition.customerId}
	</if>
	<if test="condition.orderNo != null and condition.orderNo != ''" >
	    and doh.orderno =  #{condition.orderNo}
	</if>
	<if test="condition.orderStartTime != null" >
	    <![CDATA[ and to_date(to_char(doh.ordertime,'yyyy/mm/dd'),'yyyy/mm/dd') >= #{condition.orderStartTime} ]]>
	</if>
	<if test="condition.orderEndTime != null" >
	    <![CDATA[ and to_date(to_char(doh.ordertime,'yyyy/mm/dd'),'yyyy/mm/dd') <= #{condition.orderEndTime} ]]>
	</if>
	<if test="condition.orderType != null and condition.orderType != ''" >
	    and doh.ordertype =  #{condition.orderType}
	</if>
	<if test="condition.orderCode != null and condition.orderCode != ''" >
	    and doh.soreference1 =  #{condition.orderCode}
	</if>
	<if test="condition.orderStatus != null and condition.orderStatus != ''" >
	    and doh.sostatus = #{condition.orderStatus}
	</if>
	<!-- <if test="condition.sostatusCheck != null and condition.sostatusCheck != ''" >
	    and sostatus not in ('90','99')
	</if> -->
	<if test="condition.warehouseId != null and condition.warehouseId != ''" >
	    and doh.warehouseid =  #{condition.warehouseId}
	</if>
	<if test="condition.customerSet != null" >
		<if test="condition.customerSet.isEmpty() == false" >
			and doh.customerid in (
			<foreach collection="condition.customerSet" item="customerSet" index="index" separator="," >
				#{customerSet.id,jdbcType=VARCHAR}
			</foreach>
			)
		</if>
	</if>
</trim>
</sql>
   

<!-- 插入记录 -->
<insert id="add" parameterType="Object" >
	insert into Doc_Order_Header (
	orderno,
	customerid,
	ordertime,
	ordertype,
	sostatus,
	consigneeid,
	consigneename,
	c_address1,
	<if test="tel != null  ">
		c_tel1,
	</if>
	<if test="customerName != null  ">
		c_address2,
	</if>
	<if test="customerShortName != null  ">
		c_address3,
	</if>
	<if test="customerStore != null  ">
		c_address4,
	</if>
	<if test="fenceName != null  ">
		carrieraddress1,
	</if>
	<if test="orderCode != null  ">
		soreference1,
	</if>
	<if test="externalOrderCode != null  ">
		soreference2,
	</if>
	<if test="requiredDeliveryTime != null  ">
		requireddeliverytime,
	</if>
	<if test="notes != null  ">
		notes,
	</if>
	warehouseid,
	createsource,
	addtime,
	addwho,
	edittime,
	editwho
	)
	values(
	#{orderNo},
	#{customerId},
	now(),
	#{orderType},
	'00',
	#{consigneeName},
	#{consigneeName},
	#{address},
	<if test="tel != null  ">
		#{tel},
	</if>
	<if test="customerName != null  ">
		#{customerName},
	</if>
	<if test="customerShortName != null  ">
		#{customerShortName},
	</if>
	<if test="customerStore != null  ">
		#{customerStore},
	</if>
	<if test="fenceName != null  ">
		#{fenceName},
	</if>
	<if test="orderCode != null  ">
		#{orderCode},
	</if>
	<if test="externalOrderCode != null  ">
		#{externalOrderCode},
	</if>
	<if test="requiredDeliveryTime != null  ">
		#{requiredDeliveryTime},
	</if>
	<if test="notes != null  ">
		#{notes},
	</if>
	#{warehouseId},
	#{addwho},
	now(),
	#{addwho},
	now(),
	#{editwho}
	)
</insert>

<!-- 根据id，修改记录-->  
<update id="update" parameterType="Object" >
	update Doc_Order_Header set
	requireddeliverytime = #{requiredDeliveryTime},
	consigneeid = #{consigneeName},
	consigneename = #{consigneeName},
	c_address1 = #{address},
	c_tel1=#{tel},
	<if test="notes != null  ">
		notes=#{notes},
	</if>
	<if test="orderCode != null  ">
		soreference1=#{orderCode},
	</if>
	edittime = now(),
	editwho = #{editwho}
	where orderno = #{orderNo,jdbcType=VARCHAR}
</update>

<!-- 删除记录 -->
<delete id="delete" parameterType="Object">
	delete from Doc_Order_Header where orderno = #{orderNo}
</delete>
 
<!-- 根据id查询 订单 -->
<select id="queryById"  resultMap="OrderHeaderForNormalMap" parameterType="Object">
	select customerid as customerId,
	orderno as orderNo,
	ordertime as orderTime,
	requireddeliverytime as requiredDeliveryTime,
	soreference1 as orderCode,
	sostatus as orderStatus,
	ordertype as orderType,
	consigneename as consigneeName,
	c_province as province,
	c_city as city,
	c_address2 as district,
	c_address1 as address,
	c_tel1 as tel,
	c_zip as zipCode,
	carrierid as carrierId,
	carriername as carrierName,
	lastshipmenttime as lastShipmentTime,
	notes as notes,
	addwho as addwho,
	addtime as addtime,
	editwho as editwho,
	edittime as edittime,
	rfgettask as packingFlag
	from Doc_Order_Header
	where orderno = #{orderNo,jdbcType=VARCHAR}
	and ordertype = 'SO'
	<if test="currentTime != null " >
	    and #{currentTime,jdbcType=DATE} = #{currentTime,jdbcType=DATE}
	</if>
</select>

<!--订单列表总数-->
<select id="queryByCount" resultType="java.lang.Integer"  parameterType="Object">
	select count(1) from Doc_Order_Header doh
	where doh.ordertype = 'SO'
	<include refid="Example_Where_Clause"/>
</select>
  	
<!--查询订单列表-->
<!--<select id="queryByPageList" resultMap="OrderHeaderForNormalMap"  parameterType="Object">
	select a.customerid as customerId,
	b.h_edi_01 as customerShortName,
	a.orderno as orderNo,
	a.ordertime as orderTime,
	a.requireddeliverytime as requiredDeliveryTime,
	a.soreference1 as orderCode,
	a.sostatus as orderStatus,
	c.codename_c as orderStatusName,
	a.ordertype as orderType,
	d.codename_c as orderTypeName,
	a.consigneename as consigneeName,
	a.c_province as province,
	a.c_city as city,
	a.c_address2 as district,
	a.c_address1 as address,
	a.c_tel1 as tel,
	a.c_zip as zipCode,
	a.carrierid as carrierId,
	a.carriername as carrierName,
	a.lastshipmenttime as lastShipmentTime,
	a.notes as notes,
	a.addwho as addwho,
	a.addtime as addtime,
	a.editwho as editwho,
	a.edittime as edittime,
	a.h_edi_09 as boxQty,
	a.h_edi_11 as totalGrossWeight,
	a.h_edi_12 as totalCubic
	from (select doh.customerid,
	doh.orderno,
	doh.ordertime,
	doh.requireddeliverytime,
	doh.soreference1,
	doh.sostatus,
	doh.ordertype,
	doh.consigneename,
	doh.c_province,
	doh.c_city,
	doh.c_address2,
	doh.c_address1,
	doh.c_tel1,
	doh.c_zip,
	doh.carrierid,
	doh.carriername,
	doh.lastshipmenttime,
	doh.notes,
	doh.addwho,
	doh.addtime,
	doh.editwho,
	doh.edittime,
	doh.h_edi_09,
	doh.h_edi_11,
	doh.h_edi_12,
	row_number() over(order by bc.show_sequence, doh.ordertime desc) as row_num
	from Doc_Order_Header doh, Bas_Codes bc
	where doh.ordertype = 'SO'
	and doh.sostatus = bc.code
	and bc.codeid = 'SO_STS'
	<include refid="Example_Where_Clause"/>
	) a,
    Bas_Customer b,
    Bas_Codes c,
    Bas_Codes d
	where a.customerid = b.customerid
	and a.sostatus = c.code
	and c.codeid = 'SO_STS'
	and a.ordertype = d.code
	and d.codeid = 'SO_TYP'
    <if test="limitClause != null and limitClause != ''" >
       ${limitClause}
    </if>
    order by c.show_sequence, a.ordertime desc
</select>
-->

<!--拣货单列表-->
<select id="queryByPickingList" resultMap="PickingMap"  parameterType="Object">
	select c.customerid as customerId,
	c.h_edi_01 as customerShortName,
	a.orderno as orderNo,
	b.soreference1 as orderCode,
	g.total_qty as totalQty,
	g.total_grossweight as totalGrossWeight,
	g.total_cube as totalCubic,
	b.notes as notes,
	a.sku as sku,
	d.descr_c as skuName,
	d.unit as unit,
	sum(a.qty) as qtyAllocated,
	a.location as locationId,
	row_number() over(order by a.orderno, e.picklogicalsequence, a.sku) as orderLineNo
	from ACT_Allocation_Details a,
	Doc_Order_Header b,
	Bas_Customer c,
	Bas_Sku d,
	Bas_Location e,
	Inv_Lot_Att f,
	(select x.orderno,
	sum(x.qty) total_qty,
	sum(x.qty * nvl(y.grossweight, 0)) total_grossweight,
	sum(x.qty * nvl(y.cube, 0)) total_cube
	from Act_Allocation_Details x, Bas_Sku y
	where x.customerid = y.customerid
	and x.sku = y.sku
	and x.orderno = #{orderNo,jdbcType=VARCHAR}
	group by x.orderno) g
	where a.customerid = c.customerid
	and a.customerid = d.customerid
	and a.sku = d.sku
	and a.orderno = b.orderno
	and a.location = e.locationid(+)
	and a.lotnum = f.lotnum(+)
	and a.orderno = g.orderno
	group by c.customerid,
	c.h_edi_01,
	a.orderno,
	b.soreference1,
	g.total_qty,
	g.total_grossweight,
	g.total_cube,
	b.notes,
	a.sku,
	d.descr_c,
	d.unit,
	a.location,
	e.picklogicalsequence
</select>

<!--签收单列表-->
<select id="queryByReceiptList" resultMap="ReceiptMap"  parameterType="Object">
	select a.customerid as customerId,
	c.h_edi_01 as customerShortName,
	a.orderno as orderNo,
	nvl(a.soreference1,a.orderno) as orderCode,
	a.requireddeliverytime as requiredDeliveryTime,
	a.consigneename as consigneeName,
	a.c_address1 as address,
	a.c_tel1 as tel,
	a.h_edi_09 as boxQty,
	e.totalAmt as totalPrice,
	a.notes as notes,
	b.sku as sku,
	d.descr_c as skuName,
	d.unit as unit,
	b.qtyordered as qtyOrdered,
	b.price as price,
	row_number() over(order by a.orderno, b.sku) as orderLineNo
	from Doc_Order_Header a,
	Doc_Order_Details b,
	Bas_Customer c,
	Bas_Sku d,
	(select orderno,
	sum(qtyordered * nvl(price,0)) totalAmt
	from Doc_Order_Details
	where orderno = #{orderNo,jdbcType=VARCHAR}
	group by orderno) e
	where a.orderno = b.orderno
	and a.customerid = c.customerid
	and b.customerid = d.customerid
	and b.sku = d.sku
	and a.orderno = e.orderno
</select>
  	
<!--导出订单明细-->
<select id="queryByExportList" resultMap="ExportOrderDataMap"  parameterType="Object">
	select a.customerid as customerId,
	c.h_edi_01 as customerShortName,
	a.orderno as orderNo,
	a.soreference1 as orderCode,
	a.sostatus as orderStatus,
	d.codename_c as orderStatusName,
	a.consigneename as consigneeName,
	a.c_address1 as address,
	a.c_tel1 as tel,
	b.orderlineno as orderLineNo,
	b.sku as sku,
	b.qtyordered as qtyOrdered,
	b.qtyshipped as qtyShipped,
	b.price as price
	from (
	select doh.customerid,
	doh.orderno,
	doh.soreference1,
	doh.sostatus,
	doh.consigneename,
	doh.c_province,
	doh.c_city,
	doh.c_address2,
	doh.c_address1,
	doh.c_tel1,
	doh.c_zip,
	doh.carrierid,
	doh.carriername,
	doh.lastshipmenttime,
	doh.notes,
	doh.addwho,
	doh.addtime,
	doh.editwho,
	doh.edittime
	from Doc_Order_Header doh
	where ordertype = 'SO'
	<include refid="Example_Where_Clause"/>
	) a,
	Doc_Order_Details b,
	Bas_Customer c,
	Bas_Codes d
	where a.orderno = b.orderno
	and a.customerid = c.customerid
	and a.sostatus = d.code
	and d.codeid = 'SO_STS'
	order by a.orderno, b.orderlineno
</select>

<!--订单类型-->
<select id="queryPrintTemplate" resultMap="OrderHeaderForNormalMap"  parameterType="Object">
	select orderno as orderNo,
	doi.printtemplate as printTemplate
	from Doc_Order_Header doh,
 	Doc_Order_Import_Define_Header doi
	where doh.customerid = doi.customerid(+)
	and doi.tablename(+) = 'RECEIPT'
	and orderno = #{orderNo,jdbcType=VARCHAR}
</select>

<!--订单类型-->
<select id="queryOrderType" resultMap="OrderHeaderForNormalMap"  parameterType="Object">
	select code as orderType,
	codename_c as orderTypeName
	from Bas_Codes
	where codeid = 'SO_TYP'
	and code = 'SO'
	and udf_opr_chk = 'Y'
	order by show_sequence
</select>

<!--订单状态-->
<select id="queryOrderStatus" resultMap="OrderHeaderForNormalMap"  parameterType="Object">
	select code as orderStatus,
	codename_c as orderStatusName
	from Bas_Codes
	where codeid = 'SO_STS'
	and udf_opr_chk = 'Y'
	order by show_sequence
</select>

<!--查询待拣货的分配ID-->
<select id="queryByAllocationDetailsId" resultMap="OrderHeaderForNormalMap"  parameterType="Object">
	select allocationdetailsid from act_allocation_details where orderno = #{0} and status = '40'
</select>

<!--查询待取消拣货的分配ID-->
<select id="queryByUnAllocationDetailsId" resultMap="OrderHeaderForNormalMap"  parameterType="Object">
	select allocationdetailsid from act_allocation_details where orderno = #{0} and status = '60'
</select>

<!--新增订单号 -->
<select id="getIdSequence" statementType="CALLABLE" parameterType="java.util.Map">
	   {call SPCOM_GetIDSequence(#{warehouseId,mode=IN,jdbcType=VARCHAR},'CN','ORDERNO',#{resultNo,mode=OUT,jdbcType=VARCHAR},#{resultCode,mode=OUT,jdbcType=VARCHAR})}
</select>

<!--按订单分配 -->
<select id="allocationByOrder" statementType="CALLABLE" parameterType="java.util.Map">
	   {call SPSO_HardAllocation_Process(#{warehouseId,mode=IN,jdbcType=VARCHAR},'Allocation','By OrderNO','',#{orderNo,mode=IN,jdbcType=VARCHAR},'0','CN',#{userId,mode=IN,jdbcType=VARCHAR},#{result,mode=OUT,jdbcType=VARCHAR})}
</select>

<!--按订单取消分配 -->
<select id="deAllocationByOrder" statementType="CALLABLE" parameterType="java.util.Map">
	   {call SPSO_DEAllocation_Process(#{warehouseId,mode=IN,jdbcType=VARCHAR},'UnAllocation','By OrderNO','',#{orderNo,mode=IN,jdbcType=VARCHAR},'0','','CN',#{userId,mode=IN,jdbcType=VARCHAR},#{result,mode=OUT,jdbcType=VARCHAR})}
</select>

<!--按订单拣货 -->
<select id="pickingByOrder" statementType="CALLABLE" parameterType="java.util.Map">
	   {call SPSO_Picking_Process(#{warehouseId,mode=IN,jdbcType=VARCHAR},'PK',#{allocationDetailsId,mode=IN,jdbcType=VARCHAR},'CN',#{userId,mode=IN,jdbcType=VARCHAR},#{result,mode=OUT,jdbcType=VARCHAR})}
</select>

<!--按订单取消拣货 -->
<select id="unPickingByOrder" statementType="CALLABLE" parameterType="java.util.Map">
	   {call SPSO_Unpicking_Process(#{warehouseId,mode=IN,jdbcType=VARCHAR},#{allocationDetailsId,mode=IN,jdbcType=VARCHAR},'CN',#{userId,mode=IN,jdbcType=VARCHAR},#{result,mode=OUT,jdbcType=VARCHAR})}
</select>

<!--按订单发货 -->
<select id="shipmentByOrder" statementType="CALLABLE" parameterType="java.util.Map">
	   {call SPSO_Shipment_Process(#{warehouseId,mode=IN,jdbcType=VARCHAR},'Ship','OrderNo','',#{orderNo,mode=IN,jdbcType=VARCHAR},'0','','','CN',#{userId,mode=IN,jdbcType=VARCHAR},#{result,mode=OUT,jdbcType=VARCHAR})}
</select>

<!--按订单取消 -->
<select id="cancelByOrder" statementType="CALLABLE" parameterType="java.util.Map">
	   {call SPSO_CloseCancel(#{warehouseId,mode=IN,jdbcType=VARCHAR},'Cancel',#{orderNo,mode=IN,jdbcType=VARCHAR},'N','CN',#{userId,mode=IN,jdbcType=VARCHAR},#{result,mode=OUT,jdbcType=VARCHAR})}
</select>
  	
</mapper>   
